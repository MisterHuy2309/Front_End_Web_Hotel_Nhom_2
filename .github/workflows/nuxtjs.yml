name: Deploy Nuxt site to Pages  # Tên của workflow

on:
  push:
    branches:
      - "main"  # Workflow được kích hoạt khi có sự kiện push vào nhánh 'main'
  workflow_dispatch:  # Cho phép bạn chạy workflow thủ công từ giao diện Actions trên GitHub

permissions:
  contents: read  # Cung cấp quyền đọc nội dung repository
  pages: write  # Cung cấp quyền ghi lên GitHub Pages
  id-token: write  # Cung cấp quyền tạo token xác thực nếu cần thiết

concurrency:
  group: "pages"  # Đảm bảo chỉ một workflow triển khai GitHub Pages chạy đồng thời
  cancel-in-progress: false  # Không hủy các workflow đang chạy để đảm bảo hoàn thành

jobs:
  build:
    runs-on: ubuntu-latest  # Workflow sẽ chạy trên môi trường Ubuntu mới nhất

    steps:
      - name: Checkout
        uses: actions/checkout@v4  # Lấy mã nguồn từ repository
        
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager"
            exit 1
          fi  # Đóng câu lệnh if

      - name: Setup Node
        uses: actions/setup-node@v4  # Thiết lập môi trường Node.js
        with:
          node-version: "20"  # Phiên bản Node.js
          cache: ${{ steps.detect-package-manager.outputs.manager }}  # Kích hoạt cache tương ứng với trình quản lý gói

      - name: Setup Pages
        uses: actions/configure-pages@v5  # Cấu hình tự động cho dự án Nuxt.js với GitHub Pages
        with:
          static_site_generator: nuxt  # Tự động thêm `router.base` và đặt target là `static`

      - name: Restore cache
        uses: actions/cache@v4  # Phục hồi cache đã lưu trước đó
        with:
          path: |
            .output/public  # Thư mục chứa các tệp đã build khi sử dụng Nuxt 3 với static site generation
          key: ${{ runner.os }}-nuxt-build-${{ hashFiles('.output/public') }}  # Khóa cache dựa trên nội dung thư mục .output/public
          restore-keys: |
            ${{ runner.os }}-nuxt-build-  # Dùng khóa dự phòng nếu không khớp hoàn toàn

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}  # Cài đặt phụ thuộc với npm hoặc yarn

      - name: Static HTML export with Nuxt
        run: ${{ steps.detect-package-manager.outputs.manager }} run generate  # Tạo các tệp HTML tĩnh với lệnh `nuxt generate`

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3  # Lưu các tệp đã build để triển khai trong bước sau
        with:
          path: .output/public  # Thư mục chứa các tệp đã được tạo bởi Nuxt.js

  deploy:
    environment:
      name: github-pages  # Đặt tên môi trường triển khai là "github-pages"
      url: ${{ steps.deployment.outputs.page_url }}  # Lưu URL của trang web sau khi triển khai
    runs-on: ubuntu-latest  # Chạy job trên môi trường Ubuntu mới nhất
    needs: build  # Chỉ chạy job này sau khi job "build" hoàn thành

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4  # Thực hiện triển khai các tệp đã tải lên GitHub Pages
        with:
          path: .output/public  # Đường dẫn tới thư mục chứa các tệp static đã build
