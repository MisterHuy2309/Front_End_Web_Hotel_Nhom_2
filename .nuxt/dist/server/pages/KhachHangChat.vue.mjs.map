{"version":3,"file":"KhachHangChat.vue.mjs","sources":["../../../../pages/KhachHangChat.vue"],"sourcesContent":["<template>\r\n  <div class=\"chat-container\">\r\n    <h1>💬 Chat với Quản Trị Viên</h1>\r\n\r\n    <!-- Khu vực chat -->\r\n    <div class=\"chat-box\">\r\n      <div class=\"messages\">\r\n        <div\r\n          v-for=\"(message, index) in messages\"\r\n          :key=\"index\"\r\n          :class=\"message.isAdmin ? 'admin-message' : 'customer-message'\"\r\n        >\r\n          {{ message.text }}\r\n        </div>\r\n      </div>\r\n      <div class=\"chat-input\">\r\n        <input\r\n          type=\"text\"\r\n          v-model=\"newMessage\"\r\n          placeholder=\"Nhập tin nhắn...\"\r\n          @keyup.enter=\"sendMessage\"\r\n        />\r\n        <button @click=\"sendMessage\">Gửi</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\r\nimport * as signalR from '@microsoft/signalr';\r\n\r\nconst messages = ref([]); // Tin nhắn trong cuộc trò chuyện\r\nconst newMessage = ref(''); // Tin nhắn mới\r\nconst customerId = 'KH001'; // Mã khách hàng (tự động lấy từ hệ thống khách hàng)\r\nconst adminId = 'QT001'; // Mã quản trị viên (được gán tự động)\r\n\r\nlet connection = null;\r\n\r\n// Thiết lập kết nối SignalR\r\nconst setupSignalR = async () => {\r\n  connection = new signalR.HubConnectionBuilder()\r\n    .withUrl('http://nhom2webkhachsan.runasp.net/chathub') // Đường dẫn tới SignalR Hub\r\n    .withAutomaticReconnect()\r\n    .build();\r\n\r\n  // Lắng nghe tin nhắn nhận được từ quản trị viên\r\n  connection.on('ReceiveMessage', (user, message) => {\r\n    console.log('Tin nhắn nhận được từ:', user, 'Nội dung:', message); // Log tin nhắn nhận được\r\n    if (user === adminId) {\r\n      messages.value.push({ text: message, isAdmin: true }); // Tin nhắn từ quản trị viên\r\n    }\r\n  });\r\n\r\n  try {\r\n    await connection.start();\r\n    console.log('SignalR đã kết nối'); // Log khi kết nối thành công\r\n  } catch (error) {\r\n    console.error('Lỗi khi kết nối SignalR:', error); // Log lỗi khi kết nối thất bại\r\n  }\r\n};\r\n\r\n// Gửi tin nhắn tới quản trị viên\r\nconst sendMessage = async () => {\r\n  if (!newMessage.value.trim()) return;\r\n\r\n  const message = newMessage.value.trim();\r\n  messages.value.push({ text: message, isAdmin: false }); // Tin nhắn từ khách hàng\r\n  console.log('Tin nhắn gửi đi:', message); // Log tin nhắn gửi đi\r\n\r\n  try {\r\n    // Mã adminId ('QT001') được tự động gán tại đây\r\n    await connection.invoke('SendMessageToAdmin', customerId, message);\r\n    console.log(`Tin nhắn đã gửi đến quản trị viên ${adminId}:`, message); // Log khi gửi thành công\r\n    newMessage.value = ''; // Xóa nội dung input sau khi gửi\r\n  } catch (error) {\r\n    console.error('Lỗi khi gửi tin nhắn:', error); // Log lỗi khi gửi tin nhắn\r\n  }\r\n};\r\n\r\nonMounted(async () => {\r\n  console.log('Khởi tạo SignalR...'); // Log khi bắt đầu khởi tạo\r\n  await setupSignalR();\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n  if (connection) {\r\n    connection.stop()\r\n      .then(() => console.log('SignalR đã ngắt kết nối')) // Log khi ngắt kết nối thành công\r\n      .catch(err => console.error('Lỗi khi ngắt kết nối SignalR:', err)); // Log lỗi khi ngắt kết nối\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.chat-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  padding: 20px;\r\n  max-width: 800px;\r\n  margin: auto;\r\n}\r\n\r\n.chat-box {\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  padding: 10px;\r\n}\r\n\r\n.messages {\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n  margin-bottom: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  padding: 10px;\r\n}\r\n\r\n.admin-message {\r\n  text-align: left;\r\n  color: blue;\r\n}\r\n\r\n.customer-message {\r\n  text-align: right;\r\n  color: green;\r\n}\r\n\r\n.chat-input {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.chat-input input {\r\n  flex: 1;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n}\r\n\r\n.chat-input button {\r\n  padding: 10px 20px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n}\r\n\r\n.chat-input button:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n"],"names":[],"mappings":";;;;;;;;AA+BA,UAAM,WAAW,IAAI,CAAA,CAAE;AACvB,UAAM,aAAa,IAAI,EAAE;;;;;;;;;;;;;;;;;"}