export declare const VaSelectOptionList: {
    new (...args: any[]): import("vue").CreateComponentPublicInstance<Readonly<import("vue").ExtractPropTypes<{
        noOptionsText: {
            type: StringConstructor;
            default: string;
        };
        getSelectedState: {
            type: import("vue").PropType<(option: import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption) => boolean>;
            required: true;
        };
        multiple: {
            type: BooleanConstructor;
            default: boolean;
        };
        search: {
            type: StringConstructor;
            default: string;
        };
        tabindex: {
            type: (StringConstructor | NumberConstructor)[];
            default: number;
        };
        hoveredOption: {
            type: import("vue").PropType<import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption>;
            default: null;
        };
        virtualScroller: {
            type: BooleanConstructor;
            default: boolean;
        };
        highlightMatchedText: {
            type: BooleanConstructor;
            default: boolean;
        };
        minSearchChars: {
            type: (StringConstructor | NumberConstructor)[];
            default: number;
        };
        autoSelectFirstOption: {
            type: BooleanConstructor;
            default: boolean;
        };
        selectedTopShown: {
            type: BooleanConstructor;
            default: boolean;
        };
        doShowAllOptions: {
            type: BooleanConstructor;
            default: boolean;
        };
        searchFn: {
            type: import("vue").PropType<(search: string, option: import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption) => boolean>;
            default: undefined;
        };
        delay: {
            type: NumberConstructor;
            default: number;
            validator: (value: number) => boolean;
        };
        options: {
            type: import("vue").PropType<import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption[]>;
            default: () => never[];
        };
        textBy: {
            type: import("vue").PropType<import("vuestic-ui/dist/types/composables/index.js").StringOrFunction>;
            default: string;
        };
        valueBy: {
            type: import("vue").PropType<import("vuestic-ui/dist/types/composables/index.js").StringOrFunction>;
            default: string;
        };
        trackBy: {
            type: import("vue").PropType<import("vuestic-ui/dist/types/composables/index.js").StringOrFunction>;
            default: string;
        };
        disabledBy: {
            type: import("vue").PropType<import("vuestic-ui/dist/types/composables/index.js").StringOrFunction>;
            default: string;
        };
        groupBy: {
            type: import("vue").PropType<import("vuestic-ui/dist/types/composables/index.js").StringOrFunction>;
            default: string;
        };
        preset: {
            type: import("vue").PropType<import("vuestic-ui/dist/types/composables/index.js").PresetPropValue>;
            default: undefined;
        };
        color: {
            type: StringConstructor;
            default: string;
        };
    }>> & {
        "onScroll-bottom"?: ((...args: any[]) => any) | undefined;
        "onSelect-option"?: ((...args: any[]) => any) | undefined;
        "onUpdate:hoveredOption"?: ((...args: any[]) => any) | undefined;
        "onNo-previous-option-to-hover"?: ((...args: any[]) => any) | undefined;
    }, {
        focusPreviousOption: () => void;
        focusNextOption: () => void;
        focusFirstOption: () => void;
        scrollToOption: (option: import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption) => void;
        focus: () => void;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
        "scroll-bottom": (...args: any[]) => void;
        "select-option": (...args: any[]) => void;
        "update:hoveredOption": (...args: any[]) => void;
        "no-previous-option-to-hover": (...args: any[]) => void;
    }, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & Readonly<import("vue").ExtractPropTypes<{
        noOptionsText: {
            type: StringConstructor;
            default: string;
        };
        getSelectedState: {
            type: import("vue").PropType<(option: import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption) => boolean>;
            required: true;
        };
        multiple: {
            type: BooleanConstructor;
            default: boolean;
        };
        search: {
            type: StringConstructor;
            default: string;
        };
        tabindex: {
            type: (StringConstructor | NumberConstructor)[];
            default: number;
        };
        hoveredOption: {
            type: import("vue").PropType<import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption>;
            default: null;
        };
        virtualScroller: {
            type: BooleanConstructor;
            default: boolean;
        };
        highlightMatchedText: {
            type: BooleanConstructor;
            default: boolean;
        };
        minSearchChars: {
            type: (StringConstructor | NumberConstructor)[];
            default: number;
        };
        autoSelectFirstOption: {
            type: BooleanConstructor;
            default: boolean;
        };
        selectedTopShown: {
            type: BooleanConstructor;
            default: boolean;
        };
        doShowAllOptions: {
            type: BooleanConstructor;
            default: boolean;
        };
        searchFn: {
            type: import("vue").PropType<(search: string, option: import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption) => boolean>;
            default: undefined;
        };
        delay: {
            type: NumberConstructor;
            default: number;
            validator: (value: number) => boolean;
        };
        options: {
            type: import("vue").PropType<import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption[]>;
            default: () => never[];
        };
        textBy: {
            type: import("vue").PropType<import("vuestic-ui/dist/types/composables/index.js").StringOrFunction>;
            default: string;
        };
        valueBy: {
            type: import("vue").PropType<import("vuestic-ui/dist/types/composables/index.js").StringOrFunction>;
            default: string;
        };
        trackBy: {
            type: import("vue").PropType<import("vuestic-ui/dist/types/composables/index.js").StringOrFunction>;
            default: string;
        };
        disabledBy: {
            type: import("vue").PropType<import("vuestic-ui/dist/types/composables/index.js").StringOrFunction>;
            default: string;
        };
        groupBy: {
            type: import("vue").PropType<import("vuestic-ui/dist/types/composables/index.js").StringOrFunction>;
            default: string;
        };
        preset: {
            type: import("vue").PropType<import("vuestic-ui/dist/types/composables/index.js").PresetPropValue>;
            default: undefined;
        };
        color: {
            type: StringConstructor;
            default: string;
        };
    }>> & {
        "onScroll-bottom"?: ((...args: any[]) => any) | undefined;
        "onSelect-option"?: ((...args: any[]) => any) | undefined;
        "onUpdate:hoveredOption"?: ((...args: any[]) => any) | undefined;
        "onNo-previous-option-to-hover"?: ((...args: any[]) => any) | undefined;
    }, {
        search: string;
        options: import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption[];
        multiple: boolean;
        preset: import("vuestic-ui/dist/types/composables/index.js").PresetPropValue;
        color: string;
        textBy: import("vuestic-ui/dist/types/composables/index.js").StringOrFunction;
        valueBy: import("vuestic-ui/dist/types/composables/index.js").StringOrFunction;
        trackBy: import("vuestic-ui/dist/types/composables/index.js").StringOrFunction;
        disabledBy: import("vuestic-ui/dist/types/composables/index.js").StringOrFunction;
        groupBy: import("vuestic-ui/dist/types/composables/index.js").StringOrFunction;
        tabindex: string | number;
        virtualScroller: boolean;
        delay: number;
        noOptionsText: string;
        selectedTopShown: boolean;
        highlightMatchedText: boolean;
        minSearchChars: string | number;
        autoSelectFirstOption: boolean;
        searchFn: (search: string, option: import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption) => boolean;
        hoveredOption: import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption;
        doShowAllOptions: boolean;
    }, true, {}, {}, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly<import("vue").ExtractPropTypes<{
        noOptionsText: {
            type: StringConstructor;
            default: string;
        };
        getSelectedState: {
            type: import("vue").PropType<(option: import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption) => boolean>;
            required: true;
        };
        multiple: {
            type: BooleanConstructor;
            default: boolean;
        };
        search: {
            type: StringConstructor;
            default: string;
        };
        tabindex: {
            type: (StringConstructor | NumberConstructor)[];
            default: number;
        };
        hoveredOption: {
            type: import("vue").PropType<import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption>;
            default: null;
        };
        virtualScroller: {
            type: BooleanConstructor;
            default: boolean;
        };
        highlightMatchedText: {
            type: BooleanConstructor;
            default: boolean;
        };
        minSearchChars: {
            type: (StringConstructor | NumberConstructor)[];
            default: number;
        };
        autoSelectFirstOption: {
            type: BooleanConstructor;
            default: boolean;
        };
        selectedTopShown: {
            type: BooleanConstructor;
            default: boolean;
        };
        doShowAllOptions: {
            type: BooleanConstructor;
            default: boolean;
        };
        searchFn: {
            type: import("vue").PropType<(search: string, option: import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption) => boolean>;
            default: undefined;
        };
        delay: {
            type: NumberConstructor;
            default: number;
            validator: (value: number) => boolean;
        };
        options: {
            type: import("vue").PropType<import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption[]>;
            default: () => never[];
        };
        textBy: {
            type: import("vue").PropType<import("vuestic-ui/dist/types/composables/index.js").StringOrFunction>;
            default: string;
        };
        valueBy: {
            type: import("vue").PropType<import("vuestic-ui/dist/types/composables/index.js").StringOrFunction>;
            default: string;
        };
        trackBy: {
            type: import("vue").PropType<import("vuestic-ui/dist/types/composables/index.js").StringOrFunction>;
            default: string;
        };
        disabledBy: {
            type: import("vue").PropType<import("vuestic-ui/dist/types/composables/index.js").StringOrFunction>;
            default: string;
        };
        groupBy: {
            type: import("vue").PropType<import("vuestic-ui/dist/types/composables/index.js").StringOrFunction>;
            default: string;
        };
        preset: {
            type: import("vue").PropType<import("vuestic-ui/dist/types/composables/index.js").PresetPropValue>;
            default: undefined;
        };
        color: {
            type: StringConstructor;
            default: string;
        };
    }>> & {
        "onScroll-bottom"?: ((...args: any[]) => any) | undefined;
        "onSelect-option"?: ((...args: any[]) => any) | undefined;
        "onUpdate:hoveredOption"?: ((...args: any[]) => any) | undefined;
        "onNo-previous-option-to-hover"?: ((...args: any[]) => any) | undefined;
    }, {
        focusPreviousOption: () => void;
        focusNextOption: () => void;
        focusFirstOption: () => void;
        scrollToOption: (option: import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption) => void;
        focus: () => void;
    }, {}, {}, {}, {
        search: string;
        options: import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption[];
        multiple: boolean;
        preset: import("vuestic-ui/dist/types/composables/index.js").PresetPropValue;
        color: string;
        textBy: import("vuestic-ui/dist/types/composables/index.js").StringOrFunction;
        valueBy: import("vuestic-ui/dist/types/composables/index.js").StringOrFunction;
        trackBy: import("vuestic-ui/dist/types/composables/index.js").StringOrFunction;
        disabledBy: import("vuestic-ui/dist/types/composables/index.js").StringOrFunction;
        groupBy: import("vuestic-ui/dist/types/composables/index.js").StringOrFunction;
        tabindex: string | number;
        virtualScroller: boolean;
        delay: number;
        noOptionsText: string;
        selectedTopShown: boolean;
        highlightMatchedText: boolean;
        minSearchChars: string | number;
        autoSelectFirstOption: boolean;
        searchFn: (search: string, option: import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption) => boolean;
        hoveredOption: import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption;
        doShowAllOptions: boolean;
    }>;
    __isFragment?: undefined;
    __isTeleport?: undefined;
    __isSuspense?: undefined;
} & import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<{
    noOptionsText: {
        type: StringConstructor;
        default: string;
    };
    getSelectedState: {
        type: import("vue").PropType<(option: import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption) => boolean>;
        required: true;
    };
    multiple: {
        type: BooleanConstructor;
        default: boolean;
    };
    search: {
        type: StringConstructor;
        default: string;
    };
    tabindex: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    hoveredOption: {
        type: import("vue").PropType<import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption>;
        default: null;
    };
    virtualScroller: {
        type: BooleanConstructor;
        default: boolean;
    };
    highlightMatchedText: {
        type: BooleanConstructor;
        default: boolean;
    };
    minSearchChars: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    autoSelectFirstOption: {
        type: BooleanConstructor;
        default: boolean;
    };
    selectedTopShown: {
        type: BooleanConstructor;
        default: boolean;
    };
    doShowAllOptions: {
        type: BooleanConstructor;
        default: boolean;
    };
    searchFn: {
        type: import("vue").PropType<(search: string, option: import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption) => boolean>;
        default: undefined;
    };
    delay: {
        type: NumberConstructor;
        default: number;
        validator: (value: number) => boolean;
    };
    options: {
        type: import("vue").PropType<import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption[]>;
        default: () => never[];
    };
    textBy: {
        type: import("vue").PropType<import("vuestic-ui/dist/types/composables/index.js").StringOrFunction>;
        default: string;
    };
    valueBy: {
        type: import("vue").PropType<import("vuestic-ui/dist/types/composables/index.js").StringOrFunction>;
        default: string;
    };
    trackBy: {
        type: import("vue").PropType<import("vuestic-ui/dist/types/composables/index.js").StringOrFunction>;
        default: string;
    };
    disabledBy: {
        type: import("vue").PropType<import("vuestic-ui/dist/types/composables/index.js").StringOrFunction>;
        default: string;
    };
    groupBy: {
        type: import("vue").PropType<import("vuestic-ui/dist/types/composables/index.js").StringOrFunction>;
        default: string;
    };
    preset: {
        type: import("vue").PropType<import("vuestic-ui/dist/types/composables/index.js").PresetPropValue>;
        default: undefined;
    };
    color: {
        type: StringConstructor;
        default: string;
    };
}>> & {
    "onScroll-bottom"?: ((...args: any[]) => any) | undefined;
    "onSelect-option"?: ((...args: any[]) => any) | undefined;
    "onUpdate:hoveredOption"?: ((...args: any[]) => any) | undefined;
    "onNo-previous-option-to-hover"?: ((...args: any[]) => any) | undefined;
}, {
    focusPreviousOption: () => void;
    focusNextOption: () => void;
    focusFirstOption: () => void;
    scrollToOption: (option: import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption) => void;
    focus: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    "scroll-bottom": (...args: any[]) => void;
    "select-option": (...args: any[]) => void;
    "update:hoveredOption": (...args: any[]) => void;
    "no-previous-option-to-hover": (...args: any[]) => void;
}, string, {
    search: string;
    options: import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption[];
    multiple: boolean;
    preset: import("vuestic-ui/dist/types/composables/index.js").PresetPropValue;
    color: string;
    textBy: import("vuestic-ui/dist/types/composables/index.js").StringOrFunction;
    valueBy: import("vuestic-ui/dist/types/composables/index.js").StringOrFunction;
    trackBy: import("vuestic-ui/dist/types/composables/index.js").StringOrFunction;
    disabledBy: import("vuestic-ui/dist/types/composables/index.js").StringOrFunction;
    groupBy: import("vuestic-ui/dist/types/composables/index.js").StringOrFunction;
    tabindex: string | number;
    virtualScroller: boolean;
    delay: number;
    noOptionsText: string;
    selectedTopShown: boolean;
    highlightMatchedText: boolean;
    minSearchChars: string | number;
    autoSelectFirstOption: boolean;
    searchFn: (search: string, option: import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption) => boolean;
    hoveredOption: import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption;
    doShowAllOptions: boolean;
}, {}, string, {}> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & (new () => {
    $slots: {
        default?(_: {
            option: import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption;
            index: number;
            selectOption: (option: import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption) => void;
        }): any;
        "option-content"?(_: {
            option: import("vuestic-ui/dist/types/components/va-select/index.js").SelectOption;
            index: number;
        }): any;
    };
});
