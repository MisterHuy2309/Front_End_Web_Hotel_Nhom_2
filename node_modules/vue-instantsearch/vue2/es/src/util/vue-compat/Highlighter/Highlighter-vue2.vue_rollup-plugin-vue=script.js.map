{"version":3,"file":"Highlighter-vue2.vue_rollup-plugin-vue=script.js","sources":["../../../../../../src/util/vue-compat/Highlighter/Highlighter-vue2.vue"],"sourcesContent":["<template>\n  <span :class=\"suit()\">\n    <component\n      v-for=\"({ value, isHighlighted }, index) in parsedHighlights\"\n      :class=\"[isHighlighted && suit('highlighted')]\"\n      :key=\"index\"\n      :is=\"isHighlighted ? highlightedTagName : TextNode\"\n      >{{ value }}</component\n    >\n  </span>\n</template>\n\n<script>\nimport { parseAlgoliaHit } from '../../parseAlgoliaHit';\n\nconst TextNode = {\n  render() {\n    return this.$slots.default;\n  },\n};\n\nexport default {\n  name: 'AisHighlighter',\n  props: {\n    hit: {\n      type: Object,\n      required: true,\n    },\n    attribute: {\n      type: String,\n      required: true,\n    },\n    highlightedTagName: {\n      type: String,\n      default: 'mark',\n    },\n    suit: {\n      type: Function,\n      required: true,\n    },\n    highlightProperty: {\n      type: String,\n      required: true,\n    },\n    preTag: {\n      type: String,\n      required: true,\n    },\n    postTag: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return { TextNode };\n  },\n  computed: {\n    parsedHighlights() {\n      return parseAlgoliaHit({\n        attribute: this.attribute,\n        hit: this.hit,\n        highlightProperty: this.highlightProperty,\n        preTag: this.preTag,\n        postTag: this.postTag,\n      });\n    },\n  },\n};\n</script>\n"],"names":["const"],"mappings":"2DAeAA"}