{"version":3,"file":"SearchBox.vue_vue&type=template&id=b43316e4&lang.js","sources":["../../../../src/components/SearchBox.vue?vue&type=template&id=b43316e4&lang.js"],"sourcesContent":["<template>\n  <div v-if=\"state\" :class=\"suit()\">\n    <slot\n      :current-refinement=\"currentRefinement\"\n      :is-search-stalled=\"state.isSearchStalled\"\n      :refine=\"state.refine\"\n    >\n      <search-input\n        @focus=\"$emit('focus', $event)\"\n        @blur=\"$emit('blur', $event)\"\n        @reset=\"$emit('reset')\"\n        :placeholder=\"placeholder\"\n        :autofocus=\"autofocus\"\n        :show-loading-indicator=\"showLoadingIndicator\"\n        :should-show-loading-indicator=\"state.isSearchStalled\"\n        :ignore-composition-events=\"ignoreCompositionEvents\"\n        :submit-title=\"submitTitle\"\n        :reset-title=\"resetTitle\"\n        :class-names=\"classNames\"\n        v-model=\"currentRefinement\"\n        ref=\"searchInput\"\n      >\n        <template #loading-indicator v-if=\"isVue3\">\n          <slot name=\"loading-indicator\" />\n        </template>\n        <slot v-if=\"isVue2\" name=\"loading-indicator\" slot=\"loading-indicator\" />\n\n        <template #submit-icon v-if=\"isVue3\">\n          <slot name=\"submit-icon\" />\n        </template>\n        <slot v-if=\"isVue2\" name=\"submit-icon\" slot=\"submit-icon\" />\n\n        <template #reset-icon v-if=\"isVue3\">\n          <slot name=\"reset-icon\" />\n        </template>\n        <slot v-if=\"isVue2\" name=\"reset-icon\" slot=\"reset-icon\" />\n      </search-input>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectSearchBox } from 'instantsearch.js/es/connectors';\n\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { isVue3, isVue2 } from '../util/vue-compat';\n\nimport SearchInput from './SearchInput.vue';\n\nexport default {\n  name: 'AisSearchBox',\n  mixins: [\n    createWidgetMixin(\n      {\n        connector: connectSearchBox,\n      },\n      {\n        $$widgetType: 'ais.searchBox',\n      }\n    ),\n    createSuitMixin({ name: 'SearchBox' }),\n  ],\n  components: {\n    SearchInput,\n  },\n  props: {\n    placeholder: {\n      type: String,\n      default: '',\n    },\n    autofocus: {\n      type: Boolean,\n      default: false,\n    },\n    showLoadingIndicator: {\n      type: Boolean,\n      default: true,\n    },\n    ignoreCompositionEvents: {\n      type: Boolean,\n      default: false,\n    },\n    submitTitle: {\n      type: String,\n      default: 'Submit the search query',\n    },\n    resetTitle: {\n      type: String,\n      default: 'Clear the search query',\n    },\n    value: {\n      type: String,\n      default: undefined,\n    },\n    modelValue: {\n      type: String,\n      default: undefined,\n    },\n    queryHook: {\n      type: Function,\n      default: undefined,\n    },\n  },\n  data() {\n    return {\n      localValue: '',\n      isVue2,\n      isVue3,\n    };\n  },\n  computed: {\n    widgetParams() {\n      return {\n        queryHook: this.queryHook,\n      };\n    },\n    isControlled() {\n      return (\n        typeof this.value !== 'undefined' ||\n        typeof this.modelValue !== 'undefined'\n      );\n    },\n    model() {\n      return this.value || this.modelValue;\n    },\n    currentRefinement: {\n      get() {\n        // if the input is controlled, but not up to date\n        // this means it didn't search, and we should pretend it was `set`\n        if (this.isControlled && this.model !== this.localValue) {\n          // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n          this.localValue = this.model;\n          this.$emit('input', this.model);\n          this.$emit('update:modelValue', this.model);\n          this.state.refine(this.model);\n        }\n\n        // we return the local value if the input is focused to avoid\n        // concurrent updates when typing\n        const { searchInput } = this.$refs;\n        if (searchInput && searchInput.isFocused()) {\n          return this.localValue;\n        }\n\n        return this.model || this.state.query || '';\n      },\n      set(val) {\n        this.localValue = val;\n        this.state.refine(val);\n        if (this.isControlled) {\n          this.$emit('input', val);\n          this.$emit('update:modelValue', val);\n        }\n      },\n    },\n  },\n};\n</script>\n"],"names":["_ctx","_createElementBlock","class","_renderSlot","currentRefinement","$options","isSearchStalled","refine","_createVNode","onFocus","$event","onBlur","onReset","placeholder","$props","autofocus","show-loading-indicator","should-show-loading-indicator","ignore-composition-events","submit-title","reset-title","class-names","ref","$data","slot"],"mappings":"gPACaA,aAAXC,eAAmBC,QAAOF,YACxBG,sBACGC,kBAAoBC,oBACpBC,gBAAmBN,QAAMM,gBACzBC,OAAQP,QAAMO,0BAEfC,KACGC,uCAAOT,gBAAeU,KACtBC,sCAAMX,eAAcU,KACpBE,uCAAOZ,mBACPa,YAAaC,cACbC,UAAWD,YACXE,yBAAwBF,uBACxBG,gCAA+BjB,QAAMM,gBACrCY,4BAA2BJ,0BAC3BK,eAAcL,cACdM,cAAaN,aACbO,cAAarB,wBACLK,yEAAAA,wBACTiB,IAAI,8CAKQC,SAAZpB,sCAA6CqB,KAAK,+BAKtCD,SAAZpB,gCAAuCqB,KAAK,yBAKhCD,SAAZpB,+BAAsCqB,KAAK,iCAbRD,eAAxB,2CACTpB,mDAI2BoB,eAAlB,qCACTpB,6CAI0BoB,eAAjB,oCACTpB"}