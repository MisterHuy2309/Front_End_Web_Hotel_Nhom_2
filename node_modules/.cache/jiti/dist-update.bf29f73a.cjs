"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.updateConfig = updateConfig;var _exsolve = require("exsolve");
var _c12CEGFwQZa = require("./shared/c12.CEGFwQZa.mjs");
var _pathe = require("pathe");
var _promises = require("node:fs/promises");
var _nodePath = require("node:path");
require("node:fs");
require("node:url");
require("node:os");
require("jiti");
require("rc9");
require("defu");
require("pkg-types");
require("dotenv");function _getRequireWildcardCache(e) {if ("function" != typeof WeakMap) return null;var r = new WeakMap(),t = new WeakMap();return (_getRequireWildcardCache = function (e) {return e ? t : r;})(e);}function _interopRequireWildcard(e, r) {if (!r && e && e.__esModule) return e;if (null === e || "object" != typeof e && "function" != typeof e) return { default: e };var t = _getRequireWildcardCache(r);if (t && t.has(e)) return t.get(e);var n = { __proto__: null },a = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];}return n.default = e, t && t.set(e, n), n;}

const UPDATABLE_EXTS = [".js", ".ts", ".mjs", ".cjs", ".mts", ".cts"];
async function updateConfig(opts) {
  const { parseModule } = await Promise.resolve().then(() => jitiImport('magicast').then((m) => _interopRequireWildcard(m)));
  let configFile = tryResolve(`./${opts.configFile}`, opts.cwd, _c12CEGFwQZa.S) || tryResolve(
    `./.config/${opts.configFile}`,
    opts.cwd,
    _c12CEGFwQZa.S
  ) || tryResolve(
    `./.config/${opts.configFile.split(".")[0]}`,
    opts.cwd,
    _c12CEGFwQZa.S
  );
  let created = false;
  if (!configFile) {
    configFile = (0, _pathe.join)(
      opts.cwd,
      opts.configFile + (opts.createExtension || ".ts")
    );
    const createResult = (await opts.onCreate?.({ configFile })) ?? true;
    if (!createResult) {
      throw new Error("Config file creation aborted.");
    }
    const content = typeof createResult === "string" ? createResult : `export default {}
`;
    await (0, _promises.mkdir)((0, _nodePath.dirname)(configFile), { recursive: true });
    await (0, _promises.writeFile)(configFile, content, "utf8");
    created = true;
  }
  const ext = (0, _nodePath.extname)(configFile);
  if (!UPDATABLE_EXTS.includes(ext)) {
    throw new Error(
      `Unsupported config file extension: ${ext} (${configFile}) (supported: ${UPDATABLE_EXTS.join(", ")})`
    );
  }
  const contents = await (0, _promises.readFile)(configFile, "utf8");
  const _module = parseModule(contents, opts.magicast);
  const defaultExport = _module.exports.default;
  if (!defaultExport) {
    throw new Error("Default export is missing in the config file!");
  }
  const configObj = defaultExport.$type === "function-call" ? defaultExport.$args[0] : defaultExport;
  await opts.onUpdate?.(configObj);
  await (0, _promises.writeFile)(configFile, _module.generate().code);
  return {
    configFile,
    created
  };
}
function tryResolve(path, cwd, extensions) {
  const res = (0, _exsolve.resolveModulePath)(path, {
    try: true,
    from: (0, _pathe.join)(cwd, "/"),
    extensions,
    suffixes: ["", "/index"],
    cache: false
  });
  return res ? (0, _pathe.normalize)(res) : void 0;
} /* v9-1e39477ab00bd482 */
