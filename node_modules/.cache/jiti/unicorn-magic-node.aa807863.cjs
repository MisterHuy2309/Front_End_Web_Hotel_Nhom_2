"use strict";Object.defineProperty(exports, "__esModule", { value: true });var _exportNames = { toPath: true, rootDirectory: true, traversePathUp: true, execFile: true, execFileSync: true };exports.execFile = execFile;exports.execFileSync = execFileSync;exports.rootDirectory = rootDirectory;exports.toPath = toPath;exports.traversePathUp = traversePathUp;var _nodeUtil = require("node:util");
var _nodeChild_process = require("node:child_process");
var _nodePath = _interopRequireDefault(require("node:path"));
var _nodeUrl = require("node:url");












































var _default = require("./default.js");Object.keys(_default).forEach(function (key) {if (key === "default" || key === "__esModule") return;if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;if (key in exports && exports[key] === _default[key]) return;Object.defineProperty(exports, key, { enumerable: true, get: function () {return _default[key];} });});function _interopRequireDefault(e) {return e && e.__esModule ? e : { default: e };}const execFileOriginal = (0, _nodeUtil.promisify)(_nodeChild_process.execFile);function toPath(urlOrPath) {return urlOrPath instanceof URL ? (0, _nodeUrl.fileURLToPath)(urlOrPath) : urlOrPath;}function rootDirectory(pathInput) {return _nodePath.default.parse(toPath(pathInput)).root;}function traversePathUp(startPath) {return { *[Symbol.iterator]() {let currentPath = _nodePath.default.resolve(toPath(startPath));let previousPath;while (previousPath !== currentPath) {yield currentPath;previousPath = currentPath;currentPath = _nodePath.default.resolve(currentPath, '..');}} };}const TEN_MEGABYTES_IN_BYTES = 10 * 1024 * 1024;async function execFile(file, arguments_, options = {}) {return execFileOriginal(file, arguments_, { maxBuffer: TEN_MEGABYTES_IN_BYTES, ...options });}function execFileSync(file, arguments_ = [], options = {}) {return (0, _nodeChild_process.execFileSync)(file, arguments_, { maxBuffer: TEN_MEGABYTES_IN_BYTES, encoding: 'utf8', stdio: 'pipe', ...options });} /* v9-a3d014c81dcdb036 */
