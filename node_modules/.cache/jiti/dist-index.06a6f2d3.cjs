"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.ImpoundPlugin = void 0;var _pluginutils = require("@rollup/pluginutils");
var _mlly = require("mlly");
var _pathe = require("pathe");
var _unplugin = require("unplugin");

const RELATIVE_IMPORT_RE = /^\.\.?\//;
const ImpoundPlugin = exports.ImpoundPlugin = (0, _unplugin.createUnplugin)((options) => {
  const filter = (0, _pluginutils.createFilter)(options.include, options.exclude, { resolve: options.cwd });
  const proxy = (0, _mlly.resolvePath)("mocked-exports/proxy", { url: "file:///C:/Users/admin/Documents/Front_End_Web_Hotel_Nhom_2/node_modules/impound/dist/index.js" });
  return {
    name: "impound",
    enforce: "pre",
    resolveId(id, importer) {
      if (!importer || !filter(importer)) {
        return;
      }
      if (RELATIVE_IMPORT_RE.test(id)) {
        id = (0, _pathe.join)(importer, "..", id);
      }
      if ((0, _pathe.isAbsolute)(id) && options.cwd) {
        id = (0, _pathe.relative)(options.cwd, id);
      }
      let matched = false;
      const logError = options.error === false ? console.error : this.error.bind(this);
      for (const [pattern, warning] of options.patterns) {
        const usesImport = pattern instanceof RegExp ? pattern.test(id) : pattern === id;
        if (usesImport) {
          const relativeImporter = (0, _pathe.isAbsolute)(importer) && options.cwd ? (0, _pathe.relative)(options.cwd, importer) : importer;
          logError(`${warning || "Invalid import"} [importing \`${id}\` from \`${relativeImporter}\`]`);
          matched = true;
        }
      }
      return matched ? proxy : null;
    }
  };
}); /* v9-9aad2a7fd21bfcae */
